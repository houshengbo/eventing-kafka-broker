# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/version: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.kafka.event" }
      ]
  name: kafkasources.sources.knative.dev
spec:
  group: sources.knative.dev
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'Kafka Source is the Schema for the kafkasources API.'
          type: object
          properties:
            spec:
              type: object
              required:
                - bootstrapServers
                - topics
              properties:
                bootstrapServers:
                  description: Bootstrap servers are the Kafka servers the consumer will connect to.
                  type: array
                  items:
                    type: string
                ceOverrides:
                  description: CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.
                  type: object
                  properties:
                    extensions:
                      description: Extensions specify what attribute are added or overridden on the outbound event. Each `Extensions` key-value pair are set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                consumerGroup:
                  description: ConsumerGroupID is the consumer group ID.
                  type: string
                consumers:
                  description: Number of desired consumers running in the consumer group. Defaults to 1.  This is a pointer to distinguish between explicit zero and not specified.
                  type: integer
                  format: int32
                delivery:
                  description: Delivery contains the delivery spec for this source
                  type: object
                  properties:
                    backoffDelay:
                      description: 'BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.'
                      type: string
                    backoffPolicy:
                      description: BackoffPolicy is the retry backoff policy (linear, exponential).
                      type: string
                    deadLetterSink:
                      description: DeadLetterSink is the sink receiving event that could not be sent to a destination.
                      type: object
                      properties:
                        CACerts:
                          description: CACerts are Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468. If set, these CAs are appended to the set of CAs provided by the Addressable target, if any.
                          type: string
                        ref:
                          description: Ref points to an Addressable.
                          type: object
                          properties:
                            address:
                              description: Address points to a specific Address Name.
                              type: string
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            group:
                              description: 'Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup. Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                              type: string
                        uri:
                          description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                          type: string
                    retry:
                      description: Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
                      type: integer
                      format: int32
                    retryAfterMax:
                      description: 'RetryAfterMax provides an optional upper bound on the duration specified in a "Retry-After" header when calculating backoff times for retrying 429 and 503 response codes.  Setting the value to zero ("PT0S") can be used to opt-out of respecting "Retry-After" header values altogether. This value only takes effect if "Retry" is configured, and also depends on specific implementations (Channels, Sources, etc.) choosing to provide this capability.  Note: This API is EXPERIMENTAL and might be changed at anytime. While this experimental feature is in the Alpha/Beta stage, you must provide a valid value to opt-in for supporting "Retry-After" headers.  When the feature becomes Stable/GA "Retry-After" headers will be respected by default, and you can choose to specify "PT0S" to opt-out of supporting "Retry-After" headers. For more details: https://github.com/knative/eventing/issues/5811  More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601 '
                      type: string
                    timeout:
                      description: 'Timeout is the timeout of each single request. The value must be greater than 0. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5148'
                      type: string
                initialOffset:
                  description: InitialOffset is the Initial Offset for the consumer group. should be earliest or latest
                  type: string
                net:
                  type: object
                  properties:
                    sasl:
                      type: object
                      properties:
                        enable:
                          type: boolean
                        password:
                          description: Password is the Kubernetes secret containing the SASL password.
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                        type:
                          description: Type of saslType, defaults to plain (vs SCRAM-SHA-512 or SCRAM-SHA-256)
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                        user:
                          description: User is the Kubernetes secret containing the SASL username.
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                    tls:
                      type: object
                      properties:
                        caCert:
                          description: CACert is the Kubernetes secret containing the server CA cert.
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                        cert:
                          description: Cert is the Kubernetes secret containing the client certificate.
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                        enable:
                          type: boolean
                        key:
                          description: Key is the Kubernetes secret containing the client key.
                          type: object
                          required:
                            - secretKeyRef
                          properties:
                            secretKeyRef:
                              description: The Secret key to select from.
                              type: object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                sink:
                  description: Sink is a reference to an object that will resolve to a uri to use as the sink.
                  type: object
                  properties:
                    CACerts:
                      description: CACerts are Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468. If set, these CAs are appended to the set of CAs provided by the Addressable target, if any.
                      type: string
                    ref:
                      description: Ref points to an Addressable.
                      type: object
                      properties:
                        address:
                          description: Address points to a specific Address Name.
                          type: string
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        group:
                          description: 'Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup. Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                          type: string
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                      type: string
                topics:
                  description: Topic topics to consume messages from
                  type: array
                  items:
                    type: string
      subresources:
        status: {}
        scale:
          # specReplicasPath defines the JSONPath inside of a custom resource that corresponds to Scale.Spec.Replicas.
          specReplicasPath: .spec.consumers
          # statusReplicasPath defines the JSONPath inside of a custom resource that corresponds to Scale.Status.Replicas.
          statusReplicasPath: .status.consumers
          # labelSelectorPath defines the JSONPath inside of a custom resource that corresponds to Scale.Status.Selector
          labelSelectorPath: .status.selector
      additionalPrinterColumns:
        - name: Topics
          type: string
          jsonPath: ".spec.topics"
        - name: BootstrapServers
          type: string
          jsonPath: ".spec.bootstrapServers"
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: KafkaSource
    plural: kafkasources
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1", "v1beta1"]
      clientConfig:
        service:
          name: kafka-source-webhook
          namespace: knative-eventing

---
